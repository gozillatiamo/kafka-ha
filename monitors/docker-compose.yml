services:
# ========================= kafka-ui =========================
  kafka-ui:
    image: provectuslabs/kafka-ui:v0.7.2
    container_name: kafka-ui
    profiles:
      - all
      - kafka-ui
    ports:
      - 8080:8080
    depends_on:
      - schema-registry
      - kafka-connect
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: broker-1:9092,broker-2:9092,broker-3:9092,broker-4:9092,broker-5:9092
      KAFKA_CLUSTERS_0_METRICS_PORT: 9101
      KAFKA_CLUSTERS_0_SCHEMAREGISTRY: http://schema-registry:8081
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_NAME: first
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_ADDRESS: http://kafka-connect:8083
      DYNAMIC_CONFIG_ENABLED: 'true'
    networks:
      - monitoring

# ========================= Confluent Platform =========================
  control-center:
    image: confluentinc/cp-enterprise-control-center:7.7.0
    container_name: control-center
    profiles:
      - all
      - confluent
    ports:
      - 9021:9021
    depends_on:
      - schema-registry
      - kafka-connect
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: broker-1:9092,broker-2:9092,broker-3:9092,broker-4:9092,broker-5:9092
      CONTROL_CENTER_REPLICATION_FACTOR: 3
      # CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 12
      # CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 12
      # CONFLUENT_METRICS_TOPIC_REPLICATION: 3
      CONTROL_CENTER_CONNECT_CONNECT-DEFAULT_CLUSTER: 'kafka-connect:8083'
      CONTROL_CENTER_CONNECT_HEALTHCHECK_ENDPOINT: '/connectors'
      CONTROL_CENTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      PORT: 9021
    networks:
      - monitoring

  schema-registry:
    image: bitnami/schema-registry:7.7.0
    user: root
    container_name: schema-registry
    profiles:
      - all
      - confluent
      - kafka-ui
    ports:
      - 8081:8081
    environment:
      SCHEMA_REGISTRY_KAFKA_BROKERS: 'PLAINTEXT://broker-1:9092,PLAINTEXT://broker-2:9092,PLAINTEXT://broker-3:9092,PLAINTEXT://broker-4:9092,PLAINTEXT://broker-5:9092'
      SCHEMA_REGISTRY_ADVERTISED_HOSTNAME: schema-registry:8081
      SCHEMA_REGISTRY_HOST_NAME: schema-registry 
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
      SCHEMA_REGISTRY_AVRO_COMPATIBILY_LEVEL: full
      SCHEMA_REGISTRY_DEBUG: true
    volumes:
      - .data/schema-registry:/bitnami
    networks:
      - monitoring

  kafka-connect:
    image: confluentinc/cp-kafka-connect:7.7.0
    container_name: kafka-connect
    profiles:
      - all
      - confluent
      - kafka-ui
    ports:
      - 8083:8083
    depends_on:
      - schema-registry
    environment:
      CONNECT_BOOTSTRAP_SERVERS: broker-1:9092,broker-2:9092,broker-3:9092,broker-4:9092,broker-5:9092
      CONNECT_REST_ADVERTISED_HOST_NAME: kafka-connect
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: _connect-configs
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
      CONNECT_OFFSET_STORAGE_TOPIC: _connect-offsets
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_STATUS_STORAGE_TOPIC: _connect-status
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      # CLASSPATH required due to CC-2422
      CLASSPATH: /usr/share/java/monitoring-interceptors/monitoring-interceptors-7.7.0.jar
      CONNECT_PRODUCER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor"
      CONNECT_CONSUMER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor"
      CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"
      CONNECT_LOG4J_LOGGERS: org.apache.zookeeper=ERROR,org.I0Itec.zkclient=ERROR,org.reflections=ERROR
    networks:
      - monitoring

# ========================= Prometeus & Grafana =========================
  kafka-exporter:
    image: bitnami/kafka-exporter:1.7.0
    container_name: kafka-exporter
    profiles:
      - all
      - grafana 
    command:
      - "--kafka.server=broker-1:9092"
      - "--kafka.server=broker-2:9092"
      - "--kafka.server=broker-3:9092"
      - "--kafka.server=broker-4:9092"
      - "--kafka.server=broker-5:9092"
    ports:
      - 9308:9308
    networks:
      - monitoring
  
  kafka-minion:
    image: redpandadata/kminion:v2.2.8
    container_name: kafka-minion
    profiles:
      - all
      - grafana 
    ports:
      - 9309:8080
    environment:
      KAFKA_BROKERS: broker-1:9092,broker-2:9092,broker-3:9092,broker-4:9092,broker-5:9092
    restart: unless-stopped
    networks:
      - monitoring

  # jmx-exporter-broker:
  #   image: bitnami/jmx-exporter:1.0.1
  #   container_name: jmx-exporter-broker
  #   profiles:
  #     - all
  #     - grafana 
  #   ports:
  #     - 9999:5556
  #   command:
  #     - "5556"
  #     - exporter.yml
  #   volumes:
  #     - ./exporter/exporter-brokers.yml:/opt/bitnami/jmx-exporter/exporter.yml
  #   networks:
  #     - monitoring

  # jmx-exporter-controller:
  #   image: bitnami/jmx-exporter:1.0.1
  #   container_name: jmx-exporter-controller
  #   profiles:
  #     - all
  #     - grafana 
  #   ports:
  #     - 9998:5556
  #   command:
  #     - "5556"
  #     - exporter.yml
  #   volumes:
  #     - ./exporter/exporter-controllers.yml:/opt/bitnami/jmx-exporter/exporter.yml
  #   networks:
  #     - monitoring

  prometheus:
    image: bitnami/prometheus:2.54.0
    container_name: prometheus
    profiles:
      - all
      - grafana 
    ports:
      - 9090:9090
    depends_on:
      - kafka-exporter
      - kafka-minion
      # - jmx-exporter-broker
      # - jmx-exporter-controller
    volumes:
      - ./prometheus.yml:/opt/bitnami/prometheus/conf/prometheus.yml
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:11.1.1
    user: root
    container_name: grafana
    profiles:
      - all
      - grafana 
    ports:
      - 3000:3000
    environment:
      GF_SECURITY_ADMIN_PASSWORD: password
    depends_on:
      - prometheus
    volumes:
      - ./.grafana-storage:/var/lib/grafana
      #  - ./grafana/provisioning:/etc/grafana/provisioning
    networks:
      - monitoring

  alertmanager:
    image: bitnami/alertmanager:0.27.0
    user: root
    container_name: alertmanager
    profiles:
      - all
      - grafana 
    ports:
      - 19093:9093
    volumes:
      - .data/alertmanager:/opt/bitnami/alertmanager/data
      # - /path/to/config.yml:/opt/bitnami/alertmanager/conf/config.yml
    networks:
      - monitoring

networks:
  monitoring:
    external: true
